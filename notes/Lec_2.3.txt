Pyhton

Why Python?
--> Versatile
--> Easy to learn
--> Interpretor
--> Data visualization
--> ML apps
--> Automation[scripting]
--> Web Devlopment
--> Data Analysis work

Disadvantages of using Python?
--> please avoid

Python is dynamic typed language
>>> print('hello World')
hello World
>>> int a =10
  File "<stdin>", line 1
    int a =10
        ^
SyntaxError: invalid syntax
>>> a = 10
>>> a
10
>>> a = 'Praveen'
>>> a
'Praveen'
>>> a = True
>>> a
True
>>>

Python 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> name  = 'ajay'
>>> name
'ajay'
>>> name  = "ajay"
>>> name
'ajay'
>>> name[0]
'a'
>>> name[1]
'j'
>>> name[-1]
'y'
>>> name[-3]
'j'
>>> name[-6]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: string index out of range
>>> name = 'goodmorning'
>>> name
'goodmorning'
>>> name[2]
'o'
>>> name[0:4]
'good'
>>> name[:4]
'good'
>>> name[:]
'goodmorning'
>>> name[::]
'goodmorning'
>>> name[:-1]
'goodmornin'
>>> name[::-1]
'gninromdoog'
>>> name[-4:-1]
'nin'
>>> name[-1:-4]
''
>>> name[7:3]
''
>>> name[0:25]
'goodmorning'
>>> name[25]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: string index out of range
>>> name[0]
'g'
>>> name[0] = 't'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
>>> name
'goodmorning'
>>> for i in name:
...     print(i)
...
g
o
o
d
m
o
r
n
i
n
g
>>> mylist = ['egg',5,'True','banana']
>>> mylist
['egg', 5, 'True', 'banana']
>>> mylist = ['egg',5,True,'banana']
>>> mylist
['egg', 5, True, 'banana']
>>> mylist = [1,2,3,4,5,6]
>>> mylist
[1, 2, 3, 4, 5, 6]
>>> mylist[2]
3
>>> mylist = ['egg',5,True,'banana']
>>> mylist[2]
True
>>> mylist[2:4]
[True, 'banana']
>>> mylist = ['egg',5,True,'banana',5]
>>> mylist
['egg', 5, True, 'banana', 5]
>>> mylist = ['egg',5,True,'banana',[1,2,3]]
>>> mylist[-1]
[1, 2, 3]
>>> mylist[5]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: list index out of range
>>> mylist[4]
[1, 2, 3]
>>> mylist[4][2]
3
>>> for i in mylist:
...     print(i)
...
egg
5
True
banana
[1, 2, 3]
>>> range(5)
range(0, 5)
>>> for i in range(5):
...     print(i)
...
0
1
2
3
4
>>> for i in range(1,10,2):
...     print(i)
...
1
3
5
7
9
>>> mylist
['egg', 5, True, 'banana', [1, 2, 3]]
>>> for i in range(len(mylist)):
...     print(i,mylist[i])
...
0 egg
1 5
2 True
3 banana
4 [1, 2, 3]
>>> mylist[4]
[1, 2, 3]
>>> mylist[4] = 'mango'
>>> mylist
['egg', 5, True, 'banana', 'mango']
>>> mylist.append(500)
>>> mylist
['egg', 5, True, 'banana', 'mango', 500]
>>> mylist.append('apple')
>>> mylist
['egg', 5, True, 'banana', 'mango', 500, 'apple']
>>> mylist.insert(2,5000)
>>> mylist
['egg', 5, 5000, True, 'banana', 'mango', 500, 'apple']
>>> mylist.count(5)
1
>>> mylist.remove(5000)
>>> mylist
['egg', 5, True, 'banana', 'mango', 500, 'apple']
>>> mylist.remove('bana')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: list.remove(x): x not in list
>>> mylist.remove('banana')
>>> mylist
['egg', 5, True, 'mango', 500, 'apple']
>>> del mylist[3]
>>> mylist
['egg', 5, True, 500, 'apple']
>>> mylist.pop(4)
'apple'
>>> mylist
['egg', 5, True, 500]
>>> mylist.pop(2)
True
>>> mylist
['egg', 5, 500]
>>>